
user www www;
#change this
worker_processes  1;
# worker_processes auto;

# Maximum number of open files per worker process.
# Should be > worker_connections.
# worker_rlimit_nofile 8192;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
error_log logs/error.log  warn;

#pid        logs/nginx.pid;


events {
    worker_connections  8000;
	multi_accept on;
	# use epoll;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
    charset utf-8;
    server_tokens off;
    more_set_headers 'Server: good server';
    charset_types text/css text/plain text/vnd.wap.wml application/javascript application/json application/rss+xml application/xml;
    index index.html;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log logs/access.log main;

    upstream upstream1 {
        ip_hash;
        server localhost:8080;
    }

    sendfile        on;
    tcp_nopush      on;
	tcp_nodelay     on;

    gzip  on; 
	gzip_disable "msie6";
    gzip_types text/plain application/json application/javascript text/css application/x-javascript;
    # gzip_proxied no-cache no-store private expired auth;
    gzip_proxied        any;
    gzip_min_length     256;
    gzip_vary           on;

    client_body_buffer_size 10K;
    client_header_buffer_size 16k;
    client_max_body_size 10m;
    large_client_header_buffers 4 16k;

    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout 20;
    send_timeout 10;
	reset_timedout_connection on;

    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;
	limit_conn_zone $binary_remote_addr zone=addr:10m;
    limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;
	limit_conn addr 200;

    lua_package_path 'lua/?.lua;/blah/?.lua;;';
 #    #should close at production
    lua_code_cache off;

    init_by_lua_file lua/init.lua;
    server {
        # listen [::]:1200;
        listen       1200;
        server_name  localhost;
        # if ($host != 'www.yourdomain.com'){
        #         rewrite ^/(.*)$ http://www.yourdomain.com/$1 permanent;
        # }
        default_type text/html;
        root public;
        set $template_root lua/view;
        # session redis
        set $session_cipher none;
        set $session_storage redis;
        set $session_redis_prefix        sessions;
        #set $session_redis_socket       unix:///var/run/redis/redis.sock;
        set $session_redis_host          127.0.0.1;
        set $session_redis_port          6379;
        set $session_redis_uselocking    off;
        set $session_redis_spinlockwait  10000;
        set $session_redis_maxlockwait   30;
        set $session_redis_pool_timeout  45;
        set $session_redis_pool_size     10;

        #access_log  logs/host.access.log main;
        location / {
            try_files $uri $uri.html @lua;
        }
        location = / {
            # try_files /index.html @lua;
            content_by_lua 'app:handle()';
        }
        location @lua {
            limit_req zone=one burst=5;
            content_by_lua 'app:handle()';
        }
        location /private {
            internal;
            alias private;
        }
        location /download_internal/ {
            internal;
            send_timeout 10s;
            limit_conn perip 10;
            limit_conn perserver 100;
            limit_rate 400k;
            chunked_transfer_encoding off;
            default_type application/octet-stream;
            #download dir
            alias download;
        }

        location /api/ {
            limit_req zone=one burst=5;
            default_type application/json;
            proxy_pass      http://upstream1/project/api/;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_redirect          off;
            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            client_max_body_size    10m;
            client_body_buffer_size 128k;
            proxy_connect_timeout   60;
            proxy_send_timeout      30;
            proxy_read_timeout      10;
            proxy_buffer_size      4k;
            proxy_buffers          4 32k;
            proxy_busy_buffers_size 64k;
            proxy_temp_file_write_size 64k;
        }
        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc|woff2|swf)$ {
          expires 1d;
          access_log off;
          add_header Cache-Control "public";
        }
        location ~* \.(?:css|js)$ {
          expires 1h;
          access_log off;
          add_header Cache-Control "public";
        }


        error_page  404              /404.html;

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   public;
        }
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    # HTTPS server
    #
    #server {
    #      listen [::]:443 ssl spdy;
    #      listen 443 ssl spdy;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
}
